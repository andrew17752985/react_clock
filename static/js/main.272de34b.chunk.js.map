{"version":3,"sources":["conponents/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","clockName","props","className","React","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","_prevProps","prevState","prevClockName","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAWMA,E,4MACJC,MAAe,CACbC,YAAa,IAAIC,M,EAGnBC,QAAU,E,uDAEV,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,YAAa,IAAIC,OAEjCM,QAAQC,KAAK,EAAKT,MAAMC,YAAYS,cAAcC,OAAO,IAAK,MAC7D,O,kCAGL,WACEN,OAAOO,cAAcR,KAAKD,W,oBAG5B,WACE,IAAQU,EAAcT,KAAKU,MAAnBD,UACAZ,EAAgBG,KAAKJ,MAArBC,YAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCF,IAChC,YACD,sBAAME,UAAU,cAAhB,SACGd,EAAYS,cAAcC,OAAO,IAAK,Y,GA5B7BK,IAAMC,WAmCXlB,IC1Cf,SAASmB,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,G,IAQZG,E,4MACJtB,MAAe,CACbuB,UAAU,EACVV,UAAW,W,EAGbV,QAAU,E,uDAEV,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEM,UAAWK,QAC1B,MAEHM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKpB,SAAS,CAAEgB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,SAACC,GAClCA,EAAMC,iBACN,EAAKpB,SAAS,CAAEgB,UAAU,S,gCAI9B,SAAmBK,EAAqBC,GACtC,IAAMC,EAAgBD,EAAUhB,UAE5BiB,IAAkB1B,KAAKJ,MAAMa,WAAaT,KAAKJ,MAAMuB,UAEvDf,QAAQuB,MAAR,uBAA8BD,EAA9B,eAAkD1B,KAAKJ,MAAMa,c,kCAIjE,WAAwB,IAAD,OACrBW,SAASQ,oBAAoB,eAAe,SAACN,GAC3CA,EAAMC,iBACN,EAAKpB,SAAS,CAAEgB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,SAACC,GAClCA,EAAMC,iBACN,EAAKpB,SAAS,CAAEgB,UAAU,OAG5BlB,OAAOO,cAAcR,KAAKD,W,oBAG5B,WACE,OACE,sBAAKY,UAAU,MAAf,UACE,6CACCX,KAAKJ,MAAMuB,UACV,cAAC,EAAD,CACEA,SAAUnB,KAAKJ,MAAMuB,SACrBV,UAAWT,KAAKJ,MAAMa,mB,GAtDhBG,IAAMC,WA8DTK,IC1EfW,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.272de34b.chunk.js","sourcesContent":["import React from 'react';\n\ninterface ClockProps {\n  clockName: string;\n  hasClock: boolean;\n}\n\ntype State = {\n  currentTime: Date;\n};\n\nclass Clock extends React.Component<ClockProps> {\n  state: State = {\n    currentTime: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ currentTime: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.currentTime.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{clockName}</strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {currentTime.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\nimport Clock from './conponents/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nclass App extends React.Component {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentDidUpdate(_prevProps: unknown, prevState: State): void {\n    const prevClockName = prevState.clockName;\n\n    if (prevClockName !== this.state.clockName && this.state.hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevClockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: true });\n    });\n\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React Clock</h1>\n        {this.state.hasClock && (\n          <Clock\n            hasClock={this.state.hasClock}\n            clockName={this.state.clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}